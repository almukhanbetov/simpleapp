name: CI/CD Deploy SimpleApp

on:
  push:
    branches: [ "main" ]

env:
  IMAGE_NAME: almuko/simpleapp

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: Setup Kubeconfig
        shell: bash
        run: |
          mkdir -p "$HOME/.kube"
          cat > "$HOME/.kube/config" <<'EOF'
          ${{ secrets.KUBECONFIG }}
          EOF

      - name: Deploy ClusterIssuer (Let's Encrypt)
        run: kubectl apply --validate=false -f k8s/cluster-issuer.yaml

      - name: Deploy Postgres (only if not exists)
        run: |
          if ! kubectl get statefulset postgres -n default >/dev/null 2>&1; then
            echo "üì¶ Postgres not found. Creating..."
            kubectl apply -f k8s/postgres.yaml
            kubectl rollout status statefulset/postgres -n default --timeout=180s
          else
            echo "‚úÖ Postgres already exists. Skipping creation."
          fi

      - name: Recreate simpleapp-db-secret
        run: |
          kubectl delete secret simpleapp-db-secret -n default --ignore-not-found
          kubectl create secret generic simpleapp-db-secret \
            -n default \
            --from-literal=url="postgres://postgres:Zxcvbnm123@postgres:5432/simpleapp?sslmode=disable"

      - name: Cleanup old migration job (if exists)
        run: |
          if kubectl get job simpleapp-migrate -n default >/dev/null 2>&1; then
            echo "üßπ Deleting old migration job..."
            kubectl delete job simpleapp-migrate -n default
          fi

      - name: Deploy App (Migrations + Deployment + Service + Ingress)
        run: kubectl apply -f k8s/simpleapp.yaml

      - name: Wait for migrations to complete
        run: |
          sleep 5
          kubectl wait --for=condition=complete job/simpleapp-migrate -n default --timeout=300s || \
            (echo "‚ùå Migrations job did not complete" && kubectl logs job/simpleapp-migrate -n default && exit 1)

      - name: Wait for app rollout
        run: kubectl rollout status deployment/simpleapp -n default --timeout=300s

      - name: Wait for TLS certificate
        run: |
          echo "‚è≥ Waiting for TLS certificate simpleapp-tls..."
          kubectl wait --for=condition=Ready certificate/simpleapp-tls -n default --timeout=300s || \
            (echo "‚ùå TLS certificate was not issued" && kubectl describe certificate simpleapp-tls -n default && exit 1)

      - name: Test API health endpoint
        run: |
          echo "üåç Testing API endpoint..."
          curl -vk --retry 5 --retry-delay 10 https://simpleapp.compnet.kz/health | grep '"status":"ok"'

      - name: Show Ingress and endpoints
        run: |
          kubectl get ingress -n default
          kubectl get svc -n default
          kubectl get pods -o wide -n default
